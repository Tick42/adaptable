import * as React from "react";
import { ICategoryChartDefinition, IChartProperties } from "../../../Utilities/Interface/BlotterObjects/IChartDefinition";
import { CategoryChartComponentState } from "./CategoryChartComponentState";
import { IColumn } from "../../../Utilities/Interface/IColumn";
interface CategoryChartComponentProps {
    CurrentChartDefinition: ICategoryChartDefinition;
    ChartData: any;
    Columns: IColumn[];
    cssClassName: string;
    ColorPalette: string[];
    onUpdateChartProperties: (chartTitle: string, chartProperties: IChartProperties) => void;
}
export declare class CategoryChartComponent extends React.Component<CategoryChartComponentProps, CategoryChartComponentState> {
    seriesColors: Map<string, string>;
    constructor(props: CategoryChartComponentProps);
    componentWillReceiveProps(nextProps: CategoryChartComponentProps, nextContext: any): void;
    render(): JSX.Element;
    calloutStyleUpdating(args: any): void;
    seriesAdded(args: any): void;
    onSetPropertyDefaults(): void;
    onShowGeneralProperties(): void;
    onShowYAxisProperties(): void;
    onShowXAxisProperties(): void;
    onShowHighlightsProperties(): void;
    onShowMiscProperties(): void;
    onHidePropertiesGroup(): void;
    onShowChartSettings(): void;
    onHideChartSettings(): void;
    onChartTypeChange(event: React.FormEvent<any>): void;
    onMarkerTypeChange(event: React.FormEvent<any>): void;
    onYAxisLabelLocationChange(event: React.FormEvent<any>): void;
    onXAxisLabelLocationChange(event: React.FormEvent<any>): void;
    private onYAxisLabelColorChange;
    private onXAxisLabelColorChange;
    private onYAxisTitleColorChange;
    private onXAxisTitleColorChange;
    onToolTipTypeChange(event: React.FormEvent<any>): void;
    onChangedCalloutsType(event: React.FormEvent<any>): void;
    private onChangedCalloutsInterval;
    onCrosshairsModeChange(event: React.FormEvent<any>): void;
    private onCrosshairSnapToDataOptionChanged;
    private onCrosshairAnnotationEnabledOptionChanged;
    private onEnableFinalValueAnnotationsOptionChanged;
    private onEnableSeriesHighlightingOptionChanged;
    private onEnableCategoryHighlightingOptionChanged;
    private onEnableItemHighlightingOptionChanged;
    private onEnableTransitionsOptionChanged;
    private onYAxisInvertedChanged;
    private onXAxisInvertedChanged;
    private onSetYAxisMinValueOptionChanged;
    private onSetYAxisMaxValueOptionChanged;
    private onSetYAxisIntervalValueOptionChanged;
    private onSetXAxisIntervalValueOptionChanged;
    private onSetYAxisLabelColorOptionChanged;
    private onSetXAxisLabelColorOptionChanged;
    private onSetYAxisTitleColorOptionChanged;
    private onSetXAxisTitleColorOptionChanged;
    onTitleAlignmentChange(event: React.FormEvent<any>): void;
    onSubTitleAlignmentChange(event: React.FormEvent<any>): void;
    private onYAxisMinValueChanged;
    private onYAxisMaxValueChanged;
    private onYAxisIntervalValueChanged;
    private onXAxisIntervalValueChanged;
    private onTransitionDurationChanged;
    private updateChartProperties;
    private onXAxisVisibilityOptionChanged;
    private onYAxisVisibilityOptionChanged;
    private onYAxisTitleChanged;
    private onXAxisGapChanged;
    private onXAxisOverlapChanged;
    private onXAxisTitleChanged;
    private onXAxisAngleChanged;
    private onYAxisLabelScaleChanged;
    private onUseDefaultYAxisTitleOptionChanged;
    private onUseDefaultXAxisTitleOptionChanged;
    private getYAxisTitle;
    private getXAxisTitle;
    private getYAxisIsLogarithmic;
}
export {};
