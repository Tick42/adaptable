!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("adaptableblotter/node_modules/react-dom"),require("adaptableblotter/factory"),require("ag-grid-enterprise"),require("fin-hypergrid"),require("@angular/common"),require("ag-grid-angular")):"function"==typeof define&&define.amd?define("adaptableblotter-angular",["exports","@angular/core","adaptableblotter/node_modules/react-dom","adaptableblotter/factory","ag-grid-enterprise","fin-hypergrid","@angular/common","ag-grid-angular"],e):e(t["adaptableblotter-angular"]={},t.ng.core,t.ReactDOM,t.factory,null,t.Hypergrid,t.ng.common,t.agGridAngular)}(this,function(t,e,r,n,a,o,i,d){"use strict";o=o&&o.hasOwnProperty("default")?o["default"]:o;var l=function(){function t(t){this.elRef=t,this.adaptableBlotterMounted=new e.EventEmitter}return t.prototype.ngOnInit=function(){var e=this;this.adaptableBlotterOptions.adaptableBlotterContainer=this.adaptableBlotterOptions.adaptableBlotterContainer||"adaptableBlotter-"+(1e4*Math.random()|0);var a=setInterval(function(){try{document.getElementById(e.adaptableBlotterOptions.adaptableBlotterContainer),e.adaptableBlotter=n.BlotterFactory.CreateAdaptableBlotter(e.adaptableBlotterOptions,e.vendorGridName),e.adaptableBlotterMounted.emit(e.adaptableBlotter),r.render(n.AdaptableBlotterApp({AdaptableBlotter:e.adaptableBlotter}),e.elRef.nativeElement.firstChild),clearInterval(a)}catch(t){}},100)},t.decorators=[{type:e.Component,args:[{selector:"adaptable-blotter",template:'<div [id]="adaptableBlotterOptions.adaptableBlotterContainer">Loading...</div>'}]}],t.ctorParameters=function(){return[{type:e.ElementRef}]},t.propDecorators={adaptableBlotterOptions:[{type:e.Input}],vendorGridName:[{type:e.Input}],adaptableBlotterMounted:[{type:e.Output}]},t}(),p=function(){function t(){this.agTheme="balham",this.agDivStyle={width:"100%",height:"90%",position:"absolute",margin:"0px"}}return t.prototype.ngOnInit=function(){this.agGridClass="ag-theme-"+this.agTheme},t.decorators=[{type:e.Component,args:[{selector:"adaptable-blotter-aggrid",template:'<div id="adaptableBlotter-angular-aggrid">\n    <div id="adaptableBlotter">\n      <adaptable-blotter\n        [adaptableBlotterOptions]="adaptableBlotterOptions"\n        vendorGridName="agGrid">\n      </adaptable-blotter>\n    </div>\n    <div id="grid">\n      <ag-grid-angular\n        [gridOptions]="gridOptions"\n        [className]="agGridClass"\n        [ngStyle]="agDivStyle">\n      </ag-grid-angular>\n    </div>\n  </div>'}]}],t.ctorParameters=function(){return[]},t.propDecorators={adaptableBlotterOptions:[{type:e.Input}],gridOptions:[{type:e.Input}],agTheme:[{type:e.Input}],agDivStyle:[{type:e.Input}]},t}(),s=function(){function t(t){this.elRef=t,this.gridLoaded=!1,this.gridOptions={},this.data=[],this.gridMounted=new e.EventEmitter}return t.prototype.ngOnInit=function(){var t=this.elRef.nativeElement.firstChild.lastChild;this.grid=new o(t,this.gridOptions),this.gridOptions.data||this.grid.setData(this.data),this.adaptableBlotterOptions.vendorGrid=this.grid,this.gridLoaded=!0,this.gridMounted.emit(this.grid),this.gridOptions.setupgrid(this.adaptableBlotterOptions.vendorGrid)},t.prototype.ngOnChanges=function(t){if(this.grid){var e=t.gridOptions,a=t.data;a&&a.previousValue!==a.currentValue&&this.grid.setData(t.data.currentValue),e&&!e.isFirstChange()&&e.previousValue!==e.currentValue&&this.ngOnInit()}},t.prototype.onAdaptableBlotterMount=function(t){},t.decorators=[{type:e.Component,args:[{selector:"adaptable-blotter-hypergrid",template:'<div id="adaptableBlotter-angular-hypergrid">\n  <div id="adaptableBlotter">\n    <adaptable-blotter\n      [adaptableBlotterOptions]="adaptableBlotterOptions"\n      vendorGridName="Hypergrid"\n      (adaptableBlotterMounted)="onAdaptableBlotterMount($event)"\n      *ngIf="gridLoaded">\n    </adaptable-blotter>\n  </div>\n    <div id="hypergrid-container"></div>\n  </div>'}]}],t.ctorParameters=function(){return[{type:e.ElementRef}]},t.propDecorators={adaptableBlotterOptions:[{type:e.Input}],gridOptions:[{type:e.Input}],data:[{type:e.Input}],gridMounted:[{type:e.Output}]},t}(),u=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,d.AgGridModule.withComponents([])],declarations:[l,p,s],exports:[l,p,s]}]}],t}();t.AdaptableBlotterModule=u,t.AdaptableBlotterComponent=l,t.AdaptableblotterAgGridComponent=p,t.AdaptableblotterHyperGridComponent=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=adaptableblotter-angular.umd.min.js.map